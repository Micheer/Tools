
# 这里是机场订阅更新和延迟测试相关锚点
pr: &pr {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}}

# url 里填写自己的机场订阅，名称不能重复
proxy-providers:
   # ikuuu
  provider1:
    <<: *pr
    url: ""
    override:
      additional-prefix: "润机场"

   # 机场2
  provider2:
    <<: *pr
    url: "http://127.0.0.1:38324/download/ikuuu?target=ClashMeta"
    override:
      additional-prefix: "ikuuu" 
      
# 开启 ip 总开关 true/false
ipv6: true
# 允许局域网的连接（可用来共享加速）
allow-lan: true
# 混合端口 HTTP 和 SOCKS5 用一个端口
mixed-port: 7890
# Tproxy 端口
tproxy-port: 7891
# 更换延迟计算方式,去除握手等额外延迟
unified-delay: true
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true

# 配置 WEB UI
# UI 名字
# external-ui: 'E:/test/cache/mihomo/run/ui'
# external-ui-name: zashboard
# secret: ""
# # UI 地址
# external-controller: -1.0.0.0:9090
# # 自定义 UI 下载地址
# external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 匹配所有进程 always/strict/off
##  - always, 开启，强制匹配所有进程
##  - strict, 默认，由 mihomo 判断是否开启
##  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict
# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
##  - 可选： "chrome","firefox","safari","ios","random","none" options.
##  - Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

# profile 应为扩展配置，但在 mihomo, 仅作为缓存项使用
profile:
  # 储存 API 对策略组的选择，以供下次启动时使用
  store-selected: true
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址
  store-fake-ip: true

# 嗅探域名 可选配置
sniffer:
  enable: true
  # TLS 和 QUIC 默认如果不配置 ports 默认嗅探 443
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  # 强制进行嗅探的域名
  force-domain:
    - +.v2ex.com

  # 需要跳过嗅探的域名
  skip-domain:
    - "+.push.apple.com"
    - "+.apple.com"
    - "+.wechat.com"
    - "+.qq.com"
    - "+.wechatapp.com"
    - "+.vivox.com"
    - "+.oray.com"
    - "+.sunlogin.net"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"

# 代理模式
tun:
  enable: true
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS配置
dns:
  # 关闭将使用系统 DNS
  enable: true
  # 是否解析 IPV6, 如为 false, 则回应 AAAA 的空解析
  ipv6: true
  # 开启 DNS 服务器监听，仅支持 udp
  listen: 0.0.0.0:53
  # fakeip 下的 IP 段设置
  fake-ip-range: 28.0.0.1/8
  # DNS 连接遵守路由规则，需配置 proxy-server-nameserver
  respect-rules: true
  # 模式：redir-host 或 fake-ip
  enhanced-mode: fake-ip
  # fake ip 白名单列表，以下地址不会下发fakeip映射用于连接
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - geosite:private
    - geosite:cn
    - "+.services.googleapis.cn"
    - "+.xn--ngstr-lra8j.com"
    - "time.*.com"
    - "+.pool.ntp.org"
    - "+.ntp.tencent.com"
    - "+.ntp1.aliyun.com"
    - "+.ntp.ntsc.ac.cn"
    - "+.cn.ntp.org.cn"
  default-nameserver:
    - 223.5.5.5

  proxy-server-nameserver:
    # - https://223.5.5.5/dns-query
    # - https://120.53.53.53/dns-query
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  nameserver:
    # - https://223.5.5.5/dns-query
    # - https://120.53.53.53/dns-query
    - 223.5.5.5
    - 119.29.29.29

  # 使用错误
  # nameserver-policy:
  #   "rule-set:private_domain,China":
  #     - 223.5.5.5
  #     - 119.29.29.29
  #   "rule-set:geolocation-!cn":
  #     - "https://dns.cloudflare.com/dns-query"
  #     - "https://dns.google/dns-query"

proxies:
  # - name: "xui-jp-vps"
  #   type: vless
  #   server: juhost.cuba-ai.com
  #   port: 2083
  #   uuid: 88e50e9b-bb65-43a3-80c6-444dfbbe1498
  #   network: ws
  #   tls: true
  #   servername: juhost.cuba-ai.com
  #   client-fingerprint: chrome
  #   ws-opts:
  #     path: "/4033957a"
  # dialer-proxy: "全球直连"

  # - name: "SS"
  #   type: ss
  #   server: "191.96.29.38"
  #   port: 26135
  #   cipher: 2022-blake3-aes-128-gcm
  #   password: "jRTAlQLEgAYB4s4jkcSaaQ=="
  #   udp: true
  #   dialer-proxy: "全球直连"

  # - name: "VLESS-Vision-Reality"
  #   type: vless
  #   server: "191.96.29.38"
  #   port: 443
  #   udp: true
  #   uuid: "3189c844-51b5-4138-9259-c987549ba5ec"
  #   flow: xtls-rprx-vision
  #   packet-encoding: xudp
  #   tls: true
  #   servername: "updates.cdn-apple.com"
  #   client-fingerprint: chrome
  #   reality-opts:
  #     public-key: "5rbK_xMl7EhR6bouQ-FURPXzSbiSTrjMtcvInM4JNEc"
  #     short-id: "540c56c4bb2bd1e4"
  #   skip-cert-verify: false
  #   # dialer-proxy: "全球直连"

  
  # - name: "HYSTERIA2"
  #   type: hysteria2
  #   server: vps.cuba-ai.com
  #   port: 38321
  #   password: "e3d62fdc-a0b6-48b3-b6b9-4f9dbe1852e9"     # sing-box执行 sing-box generate uuid 生成作为密码即可
  #   up: "100 Mbps"
  #   down: "800 Mbps"
  #   obfs: salamander
  #   obfs-password: "71369162-42a4-419c-b7cf-7869671fa09e"  
  #   client-fingerprint: chrome
  #   alpn:
  #     - h3
  #   SKIP-CERT-VERIFY: FALSE

# 单个出站代理节点
  - name: direct
    type: direct
    udp: true

# 策略组相关
pg: &pg {type: select, proxies: [手动选择, 自动选择, 链式代理]}
# 手动选择策略
mt: &mt {type: select, include-all: true}
# 自动优选策略
at: &at {type: url-test, include-all-providers: true, url: https://www.gstatic.com/generate_204, tolerance: 10, interval: 300}
# 负载均衡策略
lb: &lb {type: load-balance, include-all: true, interval: 300, url: https://www.gstatic.com/generate_204}

# 策略组
proxy-groups:
  # 策略分组
  - {name: 手动选择, type: select, proxies: [全球直连, 自动选择, GlobalGFW, China, 链式代理]}

  - {name: 全球直连, type: select, use: [provider1,provider2]}

  - {name: 链式代理, <<: *mt, proxies: [自动选择, China]}

  - {name: GlobalGFW, <<: *mt, use: [provider1,provider2]}
  
  - {name: China, <<: *mt, use: [provider1,provider2]}

  - {name: 漏网之鱼, <<: *mt, use: [provider1,provider2]}

  - {name: 自动选择, <<: *at, use: [provider1,provider2]}

# 分流策略
rules:
  - RULE-SET,private_domain,direct
  - RULE-SET,Adrules,REJECT
  - RULE-SET,YouTube,手动选择
  - RULE-SET,Google,手动选择
  - RULE-SET,GitHub,手动选择
  - RULE-SET,Microsoft,手动选择
  - RULE-SET,Telegram,手动选择
  - RULE-SET,OpenAI,手动选择
  - RULE-SET,Twitter,手动选择
  - RULE-SET,Facebook,手动选择
  - RULE-SET,TikTok,手动选择
  # - RULE-SET,GlobalMedia,手动选择
  - RULE-SET,GlobalGFW,手动选择
  - RULE-SET,Apple,手动选择
  - RULE-SET,Bilibili,China
  # - RULE-SET,WeChat,China
  - RULE-SET,China,China
  - RULE-SET,geolocation-!cn,手动选择
  - RULE-SET,cn_ip,China
  - RULE-SET,google_ip,全球直连,no-resolve
  - RULE-SET,Telegram_ip,全球直连,no-resolve
  # - GEOIP,CN,China
  - MATCH,漏网之鱼

# 规则集锚点
rule-anchor:
  # classical 规则相关
  ip: &ip {type: http, interval: 43200, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 43200, behavior: domain, format: mrs}
  wzf: &wzf {type: http, interval: 43200, behavior: domain, format: text}
  classical: &classical {type: http, interval: 43200, behavior: classical, format: text}

# 订阅规则集
rule-providers:
  # 广告拦截
  Adrules:
    <<: *classical
    url: "https://adrules.top/adrules.list"
  
  private_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"

  # 谷歌服务
  YouTube:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"
  Google:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"
  # 微软服务
  GitHub:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"
  Microsoft:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"
  # 电报服务
  Telegram:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"
  # ChatGPT
  OpenAI:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.mrs"
  # 推特加速
  Twitter:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.mrs"
  # 脸书加速
  Facebook:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/facebook.mrs"
  # 海外抖音
  TikTok:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"

  # 海外服务
  GlobalGFW:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"
  # 苹果服务
  Apple:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"
  # 哔哩哔哩
  Bilibili:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs"
  # 国内服务
  China:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"

  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"

  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"

  google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"

  Telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"
