#!name = mihomo win 配置文件
#!desc = 说明：Windows 系统专属配置
#!date = 2024-07-31 17:00
#!source = https://wiki.metacubex.one/example/conf/#__tabbed_1_3
#!author = thNylHx

# 这里是机场订阅更新和延迟测试相关锚点
pr: &pr {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}}

# url 里填写自己的机场订阅，名称不能重复
proxy-providers:
  # 机场1
  Airport_01:
    <<: *pr
    url: "http://127.0.0.1:38324/download/vless_JP_mihomo"
    override:
      additional-prefix: "test2"
#用于下载订阅时指定ua
global-ua: clash.meta

# 全局配置
# 开启 IPv6 总开关，可选：true/false
ipv6: true
# 允许局域网连接
allow-lan: true
# HTTP(S) 和 SOCKS 代理混合端口
mixed-port: 7890
# 更换延迟计算方式,去除握手等额外延迟
unified-delay: true
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true

# 配置 WEB UI
# UI 名字
external-ui: ui
# UI 地址
external-controller: 0.0.0.0:9090

# 匹配所有进程
find-process-mode: strict
# 全局 TLS 指纹
global-client-fingerprint: chrome

# profile 应为扩展配置，但在 mihomo, 仅作为缓存项使用
profile:
  # 储存 API 对策略组的选择，以供下次启动时使用
  store-selected: true
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址
  store-fake-ip: true

# 嗅探域名 可选配置
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"

# TUN配置
tun:
  enable: true
  stack: gvisor
  # 劫持所有53端口的DNS请求
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  # 指定 tun 网卡名称
  device: Network
  # 仅支持 Linux，自动设置全局路由，可以自动将全局流量路由进入 tun 网卡
  auto-route: true
  # 自动配置 iptables/nftables 以重定向 TCP 连接，需要auto-route已启用
  auto-redirect: true
  # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡
  auto-detect-interface: true

# DNS配置
dns:
  # 关闭将使用系统 DNS
  enable: true
  # DNS
  ipv6: true
  # 遵循规则
  respect-rules: true
  # 模式：redir-host 或 fake-ip
  enhanced-mode: fake-ip
  # fake ip 白名单列表'以下地址不会下发fakeip映射用于连接
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
    - "+.market.xiaomi.com"
   # 使用的DNS服务器
  nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  # 代理服务器使用的DNS服务器
  proxy-server-nameserver:
    - https://dns.google/dns-query
    - https://dns.cloudflare.com/dns-query

# 单个出站代理节点
proxies:
  # 直连节点
  - {name: 国内直连, type: direct, tfo: true, udp: true, mptcp: true, ip-version: ipv6-prefer}

# 策略组相关
# pg: &pg {type: select, proxies: [手动选择, 自动选择, 香港节点, 台湾节点, 美国节点, 日本节点, 韩国节点]}
pg: &pg {type: select, proxies: [自动选择, global, direct]}
# 手动选择策略
mt: &mt {type: select, include-all-providers: true}
# 自动优选策略
at: &at {type: url-test, include-all-providers: true, url: https://www.gstatic.com/generate_204, tolerance: 10, interval: 300}
# 负载均衡策略
lb: &lb {type: load-balance, include-all: true, interval: 300, url: https://www.gstatic.com/generate_204}

# 策略组
proxy-groups:
  # 策略分组
  - {name: 手动选择, type: select, proxies: [自动选择, global, direct]}

  - {name: YouTube, <<: *pg}
  - {name: Google, <<: *pg}
  - {name: Microsoft, <<: *pg}
  - {name: TikTok, <<: *pg}
  - {name: Telegram, <<: *pg}
  - {name: ChatGPT, <<: *pg}
  - {name: Twitter, <<: *pg}
  - {name: Facebook, <<: *pg}
  # - {name: GlobalGFW, <<: *pg}
  - {name: Apple, type: select, proxies: [direct, 手动选择, 自动选择, global]}
  - {name: Bilibili, type: select, proxies: [direct, 手动选择, 自动选择, global]}
  - {name: final, <<: *pg}
  # 地区分组
  - {name: global, <<: *mt}
  - {name: direct, <<: *mt}
  - {name: 自动选择, <<: *at}


# 分流策略
rules:
  - RULE-SET,Lan,direct
  - RULE-SET,Adrules,REJECT
  - RULE-SET,YouTube,YouTube
  - RULE-SET,Google,Google
  - RULE-SET,GitHub,Microsoft
  - RULE-SET,Microsoft,Microsoft
  - RULE-SET,TikTok,TikTok
  - RULE-SET,Telegram,Telegram
  - RULE-SET,OpenAI,ChatGPT
  - RULE-SET,Twitter,Twitter
  - RULE-SET,Facebook,Facebook
  - RULE-SET,GlobalMedia,global
  - RULE-SET,GlobalGFW,global
  - RULE-SET,Apple,Apple
  - RULE-SET,Bilibili,Bilibili
  - RULE-SET,WeChat,direct
  - RULE-SET,China,direct
  - RULE-SET,China_ip,direct
  - MATCH,final

# 规则集锚点
rule-anchor:
  # classical 规则相关
  ip: &ip {type: http, interval: 43200, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 43200, behavior: domain, format: mrs}
  wzf: &wzf {type: http, interval: 43200, behavior: domain, format: text}
  classical: &classical {type: http, interval: 43200, behavior: classical, format: text}

# 订阅规则集
rule-providers:
  # 广告拦截
  Adrules:
    <<: *classical
    url: "https://adrules.top/adrules.list"
  # # 谷歌服务
  YouTube:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Media/YouTube.list"
  Google:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/Google.list"
  # 微软服务
  GitHub:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/GitHub.list"
  Microsoft:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/Microsoft.list"
  # 电报服务
  Telegram:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Media/Telegram.list"
  # ChatGPT
  OpenAI:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/OpenAI.list"
  # 推特加速
  Twitter:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Media/Twitter.list"
  # 脸书加速
  Facebook:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Media/Facebook.list"
  # 海外抖音
  TikTok:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Media/TikTok.list"
  # 海外媒体
  GlobalMedia:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Media/GlobalMedia.list"
  # 海外服务
  GlobalGFW:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/Global.list"
  # 苹果服务
  Apple:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/Apple.list"
  # 哔哩哔哩
  Bilibili:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Media/Bilibili.list"
  # 国内服务
  WeChat:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/WeChat.list"
  China:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/China.list"
  China_ip:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/ChinaIP.list"
  # 本地/局域网
  Lan:
    <<: *classical
    url: "https://raw.githubusercontent.com/thNylHx/Tools/main/Ruleset/Other/Local.list"

